{"ast":null,"code":"var _jsxFileName = \"/run/media/akashdixit/da4f7a38-c357-4ae4-9779-5a38c1782e06/Astra/Code_Dode/React Projects/github-finder-using-function/src/context/github/GithubState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USERS, GET_REPOS } from '../../components/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== production) {\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n  githubClientId = process.env.GITHUB_CLIENT_SECRET;\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = props => {\n  _s();\n\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); //Search Users\n\n  const searchUsers = async text => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; //Get User\n\n\n  const getUser = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: GET_USERS,\n      payload: res.data\n    });\n  }; //Clear User\n\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  }); //Get Repos\n\n\n  const getUserRepos = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  }; //Set Loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers,\n      clearUsers,\n      getUser,\n      getUserRepos\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 12\n  }, this);\n};\n\n_s(GithubState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubState;\nexport default GithubState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubState\");","map":{"version":3,"sources":["/run/media/akashdixit/da4f7a38-c357-4ae4-9779-5a38c1782e06/Astra/Code_Dode/React Projects/github-finder-using-function/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USERS","GET_REPOS","githubClientId","githubClientSecret","process","env","NODE_ENV","production","REACT_APP_GITHUB_CLIENT_SECRET","GITHUB_CLIENT_SECRET","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","type","payload","data","items","getUser","username","REACT_APP_GITHUB_CLIENT_ID","clearUsers","getUserRepos","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\n\nimport {\n    SEARCH_USERS,\n    SET_LOADING,\n    CLEAR_USERS,\n    GET_USERS,\n    GET_REPOS\n} from '../../components/types';\n\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== production) {\n    githubClientId = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n    githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n    githubClientId = process.env.GITHUB_CLIENT_SECRET;\n    githubClientSecret = process.env.GITHUB_CLIENT_SECRET;    \n}\n\nconst GithubState = (props) => {\n    const initialState = {\n        users: [],\n        user: {},\n        repos: [],\n        loading: false\n    }\n\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n    //Search Users\n    const searchUsers = async (text) => {\n \n        setLoading()\n        const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\n        \n        dispatch({\n            type: SEARCH_USERS,\n            payload: res.data.items\n        })\n    }\n\n\n    //Get User\n    const getUser = async (username) => {\n        setLoading()\n        const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n        \n        dispatch({\n            type: GET_USERS,\n            payload: res.data\n        })\n      }\n\n    //Clear User\n    const clearUsers = () => \n        dispatch(\n       { type: CLEAR_USERS,}\n        )\n\n    //Get Repos\n    const getUserRepos = async (username) => {\n        setLoading();\n        const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\n        \n        dispatch({\n            type: GET_REPOS,\n            payload: res.data\n        })\n      }\n\n    //Set Loading\n    const setLoading = () => dispatch({type: SET_LOADING});\n\n\n    return <GithubContext.Provider value= {{\n        users : state.users,\n        user : state.user,\n        repos : state.repos,\n        loading : state.loading,\n        searchUsers,\n        clearUsers,\n        getUser,\n        getUserRepos\n    }}>\n\n        {props.children}\n\n    </GithubContext.Provider>\n}\n\nexport default GithubState;"]},"metadata":{},"sourceType":"module"}