{"ast":null,"code":"var _jsxFileName = \"/run/media/akashdixit/da4f7a38-c357-4ae4-9779-5a38c1782e06/Astra/Code_Dode/React Projects/github-finder-using-function/src/components/context/GithubState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USERS, GET_REPOS } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GithubState = props => {\n  _s();\n\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); //Search Users\n  //Get User\n  //Clear User\n  //Get Repos\n  //Set Loading\n\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.user,\n      loading: state.loading\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n};\n\n_s(GithubState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubState;\nexport default GithubState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubState\");","map":{"version":3,"sources":["/run/media/akashdixit/da4f7a38-c357-4ae4-9779-5a38c1782e06/Astra/Code_Dode/React Projects/github-finder-using-function/src/components/context/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USERS","GET_REPOS","GithubState","props","initialState","users","user","repos","loading","state","dispatch","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,SACIC,YADJ,EAEIC,WAFJ,EAGIC,WAHJ,EAIIC,SAJJ,EAKIC,SALJ,QAMO,UANP;;;AASA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,EADU;AAEjBC,IAAAA,IAAI,EAAE,EAFW;AAGjBC,IAAAA,KAAK,EAAE,EAHU;AAIjBC,IAAAA,OAAO,EAAE;AAJQ,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACG,aAAD,EAAgBQ,YAAhB,CAApC,CAR2B,CAS3B;AAEA;AAEA;AAEA;AAEA;;AAGA,sBAAO,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAG;AACnCC,MAAAA,KAAK,EAAGI,KAAK,CAACJ,KADqB;AAEnCC,MAAAA,IAAI,EAAGG,KAAK,CAACH,IAFsB;AAGnCC,MAAAA,KAAK,EAAGE,KAAK,CAACH,IAHqB;AAInCE,MAAAA,OAAO,EAAGC,KAAK,CAACD;AAJmB,KAAhC;AAAA,cAOFL,KAAK,CAACQ;AAPJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAUH,CA9BD;;GAAMT,W;;KAAAA,W;AAgCN,eAAeA,WAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\n\nimport {\n    SEARCH_USERS,\n    SET_LOADING,\n    CLEAR_USERS,\n    GET_USERS,\n    GET_REPOS\n} from '../types';\n\n\nconst GithubState = (props) => {\n    const initialState = {\n        users: [],\n        user: {},\n        repos: [],\n        loading: false\n    }\n\n    const [state, dispatch] = useReducer(GithubReducer, initialState)\n    //Search Users\n\n    //Get User\n\n    //Clear User\n\n    //Get Repos\n\n    //Set Loading\n\n\n    return <GithubContext.Provider value= {{\n        users : state.users,\n        user : state.user,\n        repos : state.user,\n        loading : state.loading\n    }}>\n\n        {props.children}\n\n    </GithubContext.Provider>\n}\n\nexport default GithubState;"]},"metadata":{},"sourceType":"module"}