{"ast":null,"code":"var _jsxFileName = \"/run/media/akashdixit/da4f7a38-c357-4ae4-9779-5a38c1782e06/Astra/Code_Dode/React Projects/github-finder-using-function/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, Fragment } from 'react';\nimport Navbar from './components/layout/Navbar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [state, setState] = useState({\n    users: [],\n    user: {},\n    repos: [],\n    loading: false,\n    alert: null\n  });\n  /*   async componentDidMount() {\n  \n     \n      setState({loading : true})\n      const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      \n      setState({\n        users: res.data,\n        loading: false\n      });\n  \n    \n    } */\n\n  const searchUsers = async text => {\n    setState({\n      loading: true\n    });\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setState({\n      users: res.data.items,\n      loading: false\n    });\n  };\n\n  const clearUsers = () => setState({\n    users: [],\n    loading: false\n  });\n\n  setAlert = (msg, type) => {\n    setState({\n      alert: {\n        msg: msg,\n        type: type\n      }\n    });\n    setTimeout(() => setState({\n      alert: null\n    }), 5000);\n  }; //Get Github User\n\n\n  getUser = async username => {\n    setState({\n      loading: true\n    });\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setState({\n      user: res.data,\n      loading: false\n    });\n  }; //Get User Repos\n\n\n  getUserRepos = async username => {\n    setState({\n      loading: true\n    });\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setState({\n      repos: res.data,\n      loading: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          alert: alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: props => /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Search, {\n                searchUsers: searchUsers,\n                clearUsers: clearUsers,\n                showClear: users.length > 0 ? true : false,\n                setAlert: setAlert\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Users, {\n                loading: loading,\n                users: users\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/user/:login\",\n            render: props => /*#__PURE__*/_jsxDEV(User, { ...props,\n              getUser: getUser,\n              getUserRepos: getUserRepos,\n              repos: repos,\n              user: user,\n              loading: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            component: About\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"68CIllZvavpJLubuNW5ZKMfZ3fM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/run/media/akashdixit/da4f7a38-c357-4ae4-9779-5a38c1782e06/Astra/Code_Dode/React Projects/github-finder-using-function/src/App.js"],"names":["React","Component","Fragment","Navbar","BrowserRouter","Router","Switch","Route","Users","User","Search","Alert","About","axios","App","state","setState","useState","users","user","repos","loading","alert","searchUsers","text","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","clearUsers","setAlert","msg","type","setTimeout","getUser","username","getUserRepos","props","length"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'; \nimport Navbar from './components/layout/Navbar';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About'\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n\n  const [state,setState]  = useState({\n    users: [],\n    user: {},\n    repos:[],\n    loading: false,\n    alert: null\n  })\n\n/*   async componentDidMount() {\n\n   \n    setState({loading : true})\n    const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    \n    setState({\n      users: res.data,\n      loading: false\n    });\n\n  \n  } */\n\n\n  const searchUsers = async (text) => {\n \n    setState({loading : true})\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    \n    setState({\n      users: res.data.items,\n      loading: false\n    });\n  }\n\n const clearUsers = () => \n   setState({\n      users: [],\n      loading: false\n    });\n\n    setAlert = (msg,type) => {\n      setState({alert: ({msg: msg, type: type})});\n\n      setTimeout (() => setState({alert: null}), 5000)\n    }\n\n    //Get Github User\n  getUser = async (username) => {\n    setState({loading : true})\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    \n    setState({\n      user: res.data,\n      loading: false\n    });\n  }\n\n  //Get User Repos\n  getUserRepos = async (username) => {\n    setState({loading : true})\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    \n    setState({\n      repos: res.data,\n      loading: false\n    });\n  }\n\n\n  return (\n    <Router>\n      <div className='App'>\n        <Navbar />\n        <div className='container'>\n          <Alert alert={alert} />\n\n          <Switch>\n            <Route exact path='/' render={props => (\n              <Fragment>\n              <Search searchUsers={searchUsers} \n                clearUsers={clearUsers}  \n                showClear={users.length > 0 ? true : false }\n                setAlert={setAlert}\n            />\n              <Users loading={loading} users={users}/>\n              </Fragment>\n            )} />\n            <Route exact path='/user/:login' render={props => (\n                <User {...props} \n                getUser={getUser} \n                getUserRepos={getUserRepos} \n                repos={repos} \n                user={user} \n                loading={loading}/>\n            )} />\n            <Route exact path='/about' component={About} />\n          </Switch>\n\n            </div>\n          \n       \n            \n      \n      </div>\n    </Router>\n  );\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}