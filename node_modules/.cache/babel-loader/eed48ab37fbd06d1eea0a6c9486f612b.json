{"ast":null,"code":"var _jsxFileName = \"/run/media/akashdixit/da4f7a38-c357-4ae4-9779-5a38c1782e06/Astra/Code_Dode/React Projects/github-finder-using-function/src/components/users/Users.js\";\nimport React, { Component } from 'react';\nimport UserItem from './UserItem';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport githubContext from '../context/githubContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = props => {\n  if (props.loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 20\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: userStyle,\n      children: props.users.map(user => /*#__PURE__*/_jsxDEV(UserItem, {\n        user: user\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c = Users;\nconst userStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(3, 1fr)',\n  gridGap: '1rem'\n};\nUsers.protoTypes = {\n  loading: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired\n};\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/run/media/akashdixit/da4f7a38-c357-4ae4-9779-5a38c1782e06/Astra/Code_Dode/React Projects/github-finder-using-function/src/components/users/Users.js"],"names":["React","Component","UserItem","Spinner","PropTypes","githubContext","Users","props","loading","userStyle","users","map","user","id","display","gridTemplateColumns","gridGap","protoTypes","bool","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAOjB,MAAGA,KAAK,CAACC,OAAT,EAAiB;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAGK;AACL,wBACI;AAAK,MAAA,KAAK,EAAEC,SAAZ;AAAA,gBACCF,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,iBACjB,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,cADH;AADD;AAAA;AAAA;AAAA;AAAA,YADJ;AAME;AAET,CAnBD;;KAAMP,K;AAwBN,MAAMG,SAAS,GAAG;AACdK,EAAAA,OAAO,EAAE,MADK;AAEdC,EAAAA,mBAAmB,EAAE,gBAFP;AAGdC,EAAAA,OAAO,EAAE;AAHK,CAAlB;AAMAV,KAAK,CAACW,UAAN,GAAmB;AACfT,EAAAA,OAAO,EAAEJ,SAAS,CAACc,IAAV,CAAeC,UADT;AAEfP,EAAAA,IAAI,EAAER,SAAS,CAACgB,MAAV,CAAiBD;AAFR,CAAnB;AAMA,eAAeb,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport UserItem from './UserItem';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport githubContext from '../context/githubContext';\n\n\nconst Users = (props) => {\n\n\n  \n\n \n\n        if(props.loading){\n            return <Spinner />\n        }\n        else {\n        return (\n            <div style={userStyle}>\n            {props.users.map(user => (\n                <UserItem key={user.id} user={user} />\n            ))}\n            </div>\n        )}\n    \n}\n\n\n\n\nconst userStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    gridGap: '1rem'\n}\n\nUsers.protoTypes = {\n    loading: PropTypes.bool.isRequired,\n    user: PropTypes.object.isRequired,\n};\n\n\nexport default Users\n"]},"metadata":{},"sourceType":"module"}