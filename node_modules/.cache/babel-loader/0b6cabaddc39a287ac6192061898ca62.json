{"ast":null,"code":"var _jsxFileName = \"/run/media/akashdixit/da4f7a38-c357-4ae4-9779-5a38c1782e06/Astra/Code_Dode/React Projects/github-finder/src/App.js\";\nimport React, { Component } from 'react';\nimport Navbar from './components/layout/Navbar';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      loading: false,\n      alert: null\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => this.setState({\n      users: [],\n      loading: false\n    });\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg: msg,\n          type: type\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        searchUsers: this.searchUsers,\n        clearUsers: this.clearUsers,\n        showClear: this.state.users.length > 0 ? true : false,\n        setAlert: this.setAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(User, {\n          loading: this.state.loading,\n          users: this.state.users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/run/media/akashdixit/da4f7a38-c357-4ae4-9779-5a38c1782e06/Astra/Code_Dode/React Projects/github-finder/src/App.js"],"names":["React","Component","Navbar","User","Search","axios","App","state","users","loading","alert","searchUsers","text","setState","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","clearUsers","setAlert","msg","type","render","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA2B;AAAA;AAAA;AAAA,SAEzBM,KAFyB,GAEjB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE,KAFH;AAGNC,MAAAA,KAAK,EAAE;AAHD,KAFiB;;AAAA,SAuBzBC,WAvByB,GAuBX,MAAOC,IAAP,IAAgB;AAE5B,WAAKC,QAAL,CAAc;AAACJ,QAAAA,OAAO,EAAG;AAAX,OAAd;AACA,YAAMK,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,yCAAwCH,IAAK,cAAaI,OAAO,CAACC,GAAR,CAAYC,0BAA2B,kBAAiBF,OAAO,CAACC,GAAR,CAAYE,8BAA+B,EAAxK,CAAlB;AAEA,WAAKN,QAAL,CAAc;AACZL,QAAAA,KAAK,EAAEM,GAAG,CAACM,IAAJ,CAASC,KADJ;AAEZZ,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAhCwB;;AAAA,SAkCzBa,UAlCyB,GAkCZ,MACX,KAAKT,QAAL,CAAc;AACZL,MAAAA,KAAK,EAAE,EADK;AAEZC,MAAAA,OAAO,EAAE;AAFG,KAAd,CAnCuB;;AAAA,SAwCvBc,QAxCuB,GAwCZ,CAACC,GAAD,EAAKC,IAAL,KAAc;AACvB,WAAKZ,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAG;AAACc,UAAAA,GAAG,EAAEA,GAAN;AAAWC,UAAAA,IAAI,EAAEA;AAAjB;AAAT,OAAd;AACD,KA1CsB;AAAA;;AA6CzBC,EAAAA,MAAM,GAAI;AACV,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,KAAKf,WAA1B;AAAuC,QAAA,UAAU,EAAE,KAAKW,UAAxD;AACC,QAAA,SAAS,EAAE,KAAKf,KAAL,CAAWC,KAAX,CAAiBmB,MAAjB,GAA0B,CAA1B,GAA8B,IAA9B,GAAqC,KADjD;AAEC,QAAA,QAAQ,EAAE,KAAKJ;AAFhB;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWE,OAA1B;AAAmC,UAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC;AAArD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaC;;AA3DwB;;AA8D3B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react'; \nimport Navbar from './components/layout/Navbar';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component{\n\n  state = {\n    users: [],\n    loading: false,\n    alert: null\n  }\n\n/*   async componentDidMount() {\n\n   \n    this.setState({loading : true})\n    const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    \n    this.setState({\n      users: res.data,\n      loading: false\n    });\n\n  \n  } */\n\n\n  searchUsers = async (text) => {\n \n    this.setState({loading : true})\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    \n    this.setState({\n      users: res.data.items,\n      loading: false\n    });\n  }\n\n  clearUsers = () => \n    this.setState({\n      users: [],\n      loading: false\n    });\n\n    setAlert = (msg,type) => {\n      this.setState({alert: ({msg: msg, type: type})})\n    }\n  \n\n  render () {\n  return (\n    <div>\n      <Navbar />\n      <Search searchUsers={this.searchUsers} clearUsers={this.clearUsers}  \n       showClear={this.state.users.length > 0 ? true : false }\n       setAlert={this.setAlert}\n       />\n      <div className=\"container\">\n        <User loading={this.state.loading} users={this.state.users}/>\n      </div>\n     \n    </div>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}